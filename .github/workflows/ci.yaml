name: Lint and Test

on:
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image-tag: ${{ steps.cache-key.outputs.hash }}
      image-exists: ${{ steps.check-image.outputs.exists }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate MD5 hash for cache key
        id: cache-key
        run: |
          FILES="
            .github/workflows/docker-ci.yaml
            pyproject.toml
            uv.lock
            docker/Dockerfile
            docker/docker-entrypoint.sh
          "
          HASHES=""
          for file in $FILES; do
            if [ -f "$file" ]; then
              HASH=$(md5sum "$file" | awk '{print $1}')
              HASHES="$HASHES$HASH\n"
            fi
          done
          HASH=$(echo -e "$HASHES" | sort | md5sum | awk '{print $1}')
          echo "hash=$HASH" >> $GITHUB_OUTPUT
          echo "MD5 hash: $HASH"

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/3lc-ultralytics
          tags: |
            type=sha,format=short
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/develop' }}
            type=raw,value=md5-${{ steps.cache-key.outputs.hash }}

      - name: Check if image exists
        id: check-image
        run: |
          IMAGE_TAG="ghcr.io/${{ github.repository }}/3lc-ultralytics:md5-${{ steps.cache-key.outputs.hash }}"
          echo "Checking if image exists: $IMAGE_TAG"
          if docker manifest inspect $IMAGE_TAG > /dev/null 2>&1; then
            echo "Image exists, skipping build"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Image does not exist, will build"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        if: steps.check-image.outputs.exists != 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  lint:
    needs: build_docker_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run linting checks
        run: |
          docker run \
            -v "$PWD:/app/3lc-ultralytics" \
            ghcr.io/${{ github.repository }}/3lc-ultralytics:md5-${{ needs.build_docker_image.outputs.image-tag }} lint

  test:
    needs: build_docker_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: |
          docker run \
            -e "${{ secrets.VARIABLE_NAME }}=${{ secrets.VARIABLE_VALUE }}" \
            -e "${{ secrets.RUNTIME_NAME }}=${{ secrets.RUNTIME_VALUE }}" \
            -e "TLC_API_KEY=${{ secrets.TLC_API_KEY }}" \
            -v "$PWD:/app/3lc-ultralytics" \
            ghcr.io/${{ github.repository }}/3lc-ultralytics:md5-${{ needs.build_docker_image.outputs.image-tag }} test
          
